import { useState } from "react";
import {
  Card,
  Row,
  Col,
  Typography,
  Button,
  Table,
  Pagination,
  Input,
  Space,
  Checkbox,
  Tag,
  Tabs,
  Descriptions,
  Timeline,
  Divider,
} from "antd";
import {
  SearchOutlined,
  PlusOutlined,
  EditOutlined,
  DeleteOutlined,
  ArrowLeftOutlined,
  EnvironmentOutlined,
  ClockCircleOutlined,
  CarOutlined,
  UserOutlined,
  ShopOutlined,
} from "@ant-design/icons";
import Sidebar from "../../components/Sidebar/Sidebar";
import Header from "../../components/Header/Header";

import "./TruckQueus.css";
import PropTypes from "prop-types";

const { Title } = Typography;

const TruckQueus = ({ sidebarVisible, toggleSidebar }) => {
  const [searchText, setSearchText] = useState("");
  const [currentPage, setCurrentPage] = useState(1);
  const [selectedQueue, setSelectedQueue] = useState(null);
  const { TabPane } = Tabs;

  // Mock data for truck queues
  const truckQueues = [
    {
      key: "Q0001",
      date: "15/05/2568",
      customer: "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡πÄ‡∏≠ ‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï ‡∏à‡∏≥‡∏Å‡∏±‡∏î",
      customerContact: "0891234567",
      customerAddress: "123/456 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10110",
      plateNumber: "‡∏Å‡∏°-2525",
      driver: "‡∏ô‡∏≤‡∏¢ ‡∏Å",
      driverContact: "0851112222",
      driverLicense: "12345678",
      supplier: "‡∏£‡πâ‡∏≤‡∏ô-‡∏´‡πâ‡∏≤‡∏á‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏à‡∏≥‡∏Å‡∏±‡∏î ‡∏ö‡∏¥‡πä‡∏Å‡πÄ‡∏ö‡∏™‡∏ó‡πå ‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢",
      supplierContact: "0223334444",
      supplierAddress: "789 ‡∏ñ‡∏ô‡∏ô‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10400",
      status: "‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß",
      tripType: "full_delivery",
      distanceKm: 120,
      overnight: true,
      createdAt: "15/05/2568 08:30",
      updatedAt: "15/05/2568 09:45",
      vehicle: {
        model: "ISUZU FTR",
        capacity: "15 ‡∏ï‡∏±‡∏ô",
        manufactureYear: "2565",
      },
      timeline: [
        {
          time: "15/05/2568 08:30",
          status: "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß",
          description: "‡∏Ñ‡∏¥‡∏ß‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ admin",
        },
        {
          time: "15/05/2568 09:45",
          status: "‡∏à‡∏±‡∏î‡∏£‡∏ñ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö",
          description: "‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡∏£‡∏ñ‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô ‡∏Å‡∏°-2525 ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö‡∏ô‡∏≤‡∏¢ ‡∏Å",
        },
        {
          time: "15/05/2568 10:15",
          status: "‡∏≠‡∏≠‡∏Å‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á",
          description: "‡∏£‡∏ñ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å",
        },
      ],
      payment: {
        baseFare: 3500,
        overnightBonus: 500,
        fuelCost: 1200,
        totalCost: 5200,
      },
    },
    {
      key: "Q0002",
      date: "14/05/2568",
      customer: "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ö‡∏µ ‡πÇ‡∏•‡∏à‡∏¥‡∏™‡∏ï‡∏¥‡∏Å‡∏™‡πå ‡∏à‡∏≥‡∏Å‡∏±‡∏î",
      customerContact: "0823456789",
      customerAddress: "456/789 ‡∏ñ‡∏ô‡∏ô‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏° 3 ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10120",
      plateNumber: "‡∏á‡∏á-2254",
      driver: "‡∏ô‡∏≤‡∏¢ ‡∏Ç",
      driverContact: "0873334444",
      driverLicense: "98765432",
      supplier: "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå ‡∏à‡∏≥‡∏Å‡∏±‡∏î",
      supplierContact: "0255556666",
      supplierAddress: "123 ‡∏ñ‡∏ô‡∏ô‡∏£‡∏±‡∏ä‡∏î‡∏≤‡∏†‡∏¥‡πÄ‡∏©‡∏Å ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10400",
      status: "‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
      tripType: "only_loading",
      distanceKm: 85,
      overnight: false,
      createdAt: "14/05/2568 10:30",
      updatedAt: "14/05/2568 15:45",
      vehicle: {
        model: "HINO FC",
        capacity: "10 ‡∏ï‡∏±‡∏ô",
        manufactureYear: "2566",
      },
      timeline: [
        {
          time: "14/05/2568 10:30",
          status: "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß",
          description: "‡∏Ñ‡∏¥‡∏ß‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ admin",
        },
        {
          time: "14/05/2568 12:15",
          status: "‡∏à‡∏±‡∏î‡∏£‡∏ñ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö",
          description: "‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡∏£‡∏ñ‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô ‡∏á‡∏á-2254 ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö‡∏ô‡∏≤‡∏¢ ‡∏Ç",
        },
        {
          time: "14/05/2568 13:30",
          status: "‡∏≠‡∏≠‡∏Å‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á",
          description: "‡∏£‡∏ñ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å",
        },
        {
          time: "14/05/2568 15:45",
          status: "‡∏ñ‡∏∂‡∏á‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á",
          description: "‡∏£‡∏ñ‡∏ñ‡∏∂‡∏á‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏ñ‡πà‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
        },
      ],
      payment: {
        baseFare: 2800,
        overnightBonus: 0,
        fuelCost: 950,
        totalCost: 3750,
      },
    },
    {
      key: "Q0003",
      date: "12/05/2568",
      customer: "‡∏´‡πâ‡∏≤‡∏á‡∏´‡∏∏‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏à‡∏≥‡∏Å‡∏±‡∏î ‡∏ã‡∏µ ‡∏ó‡∏£‡∏≤‡∏ô‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï",
      customerContact: "0865556666",
      customerAddress: "789/123 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏≤‡∏ó‡∏£ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10120",
      plateNumber: "‡∏Æ‡∏ï-1234",
      driver: "‡∏ô‡∏≤‡∏¢ ‡∏Ñ",
      driverContact: "0899998888",
      driverLicense: "45678901",
      supplier: "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡∏≠‡∏≠‡∏• ‡∏à‡∏≥‡∏Å‡∏±‡∏î",
      supplierContact: "0211112222",
      supplierAddress: "456 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏µ‡∏•‡∏° ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø 10500",
      status: "‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
      tripType: "full_delivery",
      distanceKm: 150,
      overnight: true,
      createdAt: "12/05/2568 07:30",
      updatedAt: "12/05/2568 18:20",
      vehicle: {
        model: "FUSO FJ",
        capacity: "18 ‡∏ï‡∏±‡∏ô",
        manufactureYear: "2567",
      },
      timeline: [
        {
          time: "12/05/2568 07:30",
          status: "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß",
          description: "‡∏Ñ‡∏¥‡∏ß‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ admin",
        },
        {
          time: "12/05/2568 08:15",
          status: "‡∏à‡∏±‡∏î‡∏£‡∏ñ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö",
          description: "‡∏°‡∏≠‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡∏£‡∏ñ‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô ‡∏Æ‡∏ï-1234 ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö‡∏ô‡∏≤‡∏¢ ‡∏Ñ",
        },
        {
          time: "12/05/2568 09:30",
          status: "‡∏≠‡∏≠‡∏Å‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á",
          description: "‡∏£‡∏ñ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å",
        },
        {
          time: "12/05/2568 15:45",
          status: "‡∏ñ‡∏∂‡∏á‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á",
          description: "‡∏£‡∏ñ‡∏ñ‡∏∂‡∏á‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ç‡∏ô‡∏ñ‡πà‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
        },
        {
          time: "12/05/2568 18:20",
          status: "‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà‡∏Ñ‡∏•‡∏±‡∏á",
          description: "‡∏£‡∏ñ‡∏Å‡∏•‡∏±‡∏ö‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏à‡∏ö‡∏á‡∏≤‡∏ô",
        },
      ],
      payment: {
        baseFare: 4200,
        overnightBonus: 500,
        fuelCost: 1500,
        totalCost: 6200,
      },
    },
  ];

  // Columns for the table
  const columns = [
    {
      title: "‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà",
      dataIndex: "key",
      key: "key",
    },
    {
      title: "‡∏ß/‡∏î/‡∏õ",
      dataIndex: "date",
      key: "date",
    },
    {
      title: "‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤",
      dataIndex: "customer",
      key: "customer",
      ellipsis: true,
      render: (text) => <span title={text}>{text}</span>,
    },
    {
      title: "‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ",
      dataIndex: "plateNumber",
      key: "plateNumber",
    },
    {
      title: "‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö",
      dataIndex: "driver",
      key: "driver",
    },
    {
      title: "‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå",
      dataIndex: "supplier",
      key: "supplier",
      ellipsis: true,
      render: (text) => <span title={text}>{text}</span>,
    },
    {
      title: "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó",
      dataIndex: "status",
      key: "status",
    },
    {
      title: "‡∏Ñ‡πâ‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô",
      dataIndex: "overnight",
      key: "overnight",
      render: (overnight) => <Checkbox checked={overnight} disabled />,
    },
    {
      title: "ACTION",
      key: "action",
      align: "center",
      width: 150,
      render: (_, record) => (
        <Space
          size="small"
          style={{ display: "flex", justifyContent: "center" }}
        >
          <Button
            type="text"
            style={{ color: "#1890ff", padding: "0 8px" }}
            onClick={() => setSelectedQueue(record)}
            title="‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î"
            icon={<span>üëÅÔ∏è</span>}
          />
          <Button
            type="text"
            style={{ color: "#f5a623", padding: "0 8px" }}
            title="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"
            icon={<EditOutlined />}
          />
          <Button
            type="text"
            danger
            style={{ padding: "0 8px" }}
            title="‡∏•‡∏ö"
            icon={<DeleteOutlined />}
          />
        </Space>
      ),
    },
  ];

  // Handle page change
  const handlePageChange = (page) => {
    setCurrentPage(page);
  };

  // Get queue status badge color
  const getStatusColor = (status) => {
    switch (status) {
      case "‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß":
        return "blue";
      case "‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤":
        return "green";
      default:
        return "default";
    }
  };

  // Render the queue detail view
  const renderQueueDetail = () => {
    if (!selectedQueue) return null;

    return (
      <div className="queue-detail">
        <div className="detail-header">
          <Button
            type="link"
            icon={<ArrowLeftOutlined />}
            onClick={() => setSelectedQueue(null)}
          >
            ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏ß
          </Button>
        </div>

        <Card className="detail-card">
          <div className="detail-title">
            <Title level={4}>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏¥‡∏ß‡∏£‡∏ñ‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å: {selectedQueue.key}</Title>
            <Tag
              color={getStatusColor(selectedQueue.status)}
              className="status-tag"
            >
              {selectedQueue.status}
            </Tag>
          </div>

          <Row gutter={[24, 24]}>
            <Col xs={24} md={8}>
              <Card className="info-section" title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á">
                <Descriptions column={1} size="small" className="queue-info">
                  <Descriptions.Item label="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà">
                    <ClockCircleOutlined /> {selectedQueue.date}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á">
                    {selectedQueue.status}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á">
                    {selectedQueue.distanceKm} ‡∏Å‡∏¥‡πÇ‡∏•‡πÄ‡∏°‡∏ï‡∏£
                  </Descriptions.Item>
                  <Descriptions.Item label="‡∏Ñ‡πâ‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô">
                    <Checkbox checked={selectedQueue.overnight} disabled />
                    {selectedQueue.overnight ? "‡πÉ‡∏ä‡πà" : "‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà"}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠">
                    {selectedQueue.createdAt}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î">
                    {selectedQueue.updatedAt}
                  </Descriptions.Item>
                </Descriptions>
              </Card>
            </Col>

            <Col xs={24} md={8}>
              <Card className="info-section" title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö">
                <Descriptions column={1} size="small" className="queue-info">
                  <Descriptions.Item label="‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ">
                    <CarOutlined /> {selectedQueue.plateNumber}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡∏£‡∏∏‡πà‡∏ô‡∏£‡∏ñ">
                    {selectedQueue.vehicle.model}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏">
                    {selectedQueue.vehicle.capacity}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏ú‡∏•‡∏¥‡∏ï">
                    {selectedQueue.vehicle.manufactureYear}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡∏Ñ‡∏ô‡∏Ç‡∏±‡∏ö">
                    <UserOutlined /> {selectedQueue.driver}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠">
                    {selectedQueue.driverContact}
                  </Descriptions.Item>
                </Descriptions>
              </Card>
            </Col>

            <Col xs={24} md={8}>
              <Card
                className="info-section"
                title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå"
              >
                <Descriptions column={1} size="small" className="queue-info">
                  <Descriptions.Item label="‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤" className="multiline-item">
                    {selectedQueue.customer}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠">
                    {selectedQueue.customerContact}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà" className="multiline-item">
                    <EnvironmentOutlined /> {selectedQueue.customerAddress}
                  </Descriptions.Item>

                  <Divider style={{ margin: "12px 0" }} />

                  <Descriptions.Item
                    label="‡∏ã‡∏±‡∏û‡∏û‡∏•‡∏≤‡∏¢‡πÄ‡∏≠‡∏≠‡∏£‡πå"
                    className="multiline-item"
                  >
                    <ShopOutlined /> {selectedQueue.supplier}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠">
                    {selectedQueue.supplierContact}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà" className="multiline-item">
                    <EnvironmentOutlined /> {selectedQueue.supplierAddress}
                  </Descriptions.Item>
                </Descriptions>
              </Card>
            </Col>
          </Row>

          <Row gutter={[24, 24]} style={{ marginTop: 24 }}>
            <Col xs={24} md={16}>
              <Card className="timeline-section" title="‡πÑ‡∏ó‡∏°‡πå‡πÑ‡∏•‡∏ô‡πå‡∏Å‡∏≤‡∏£‡∏Ç‡∏ô‡∏™‡πà‡∏á">
                <Timeline mode="left">
                  {selectedQueue.timeline.map((item, index) => (
                    <Timeline.Item
                      key={index}
                      color={
                        index === selectedQueue.timeline.length - 1
                          ? "green"
                          : "blue"
                      }
                      label={item.time}
                    >
                      <div className="timeline-content">
                        <strong>{item.status}</strong>
                        <p>{item.description}</p>
                      </div>
                    </Timeline.Item>
                  ))}
                </Timeline>
              </Card>
            </Col>

            <Col xs={24} md={8}>
              <Card className="payment-section" title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢">
                <Descriptions column={1} size="small" className="payment-info">
                  <Descriptions.Item label="‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô">
                    ‡∏ø{selectedQueue.payment.baseFare.toLocaleString()}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏Ñ‡πâ‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô">
                    ‡∏ø{selectedQueue.payment.overnightBonus.toLocaleString()}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô">
                    ‡∏ø{selectedQueue.payment.fuelCost.toLocaleString()}
                  </Descriptions.Item>
                  <Descriptions.Item label="‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î">
                    <strong>
                      ‡∏ø{selectedQueue.payment.totalCost.toLocaleString()}
                    </strong>
                  </Descriptions.Item>
                </Descriptions>

                <div className="action-buttons">
                  <Button type="primary" style={{ marginRight: 8 }}>
                    ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ö‡∏Ç‡∏ô‡∏™‡πà‡∏á
                  </Button>
                  <Button>‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å PDF</Button>
                </div>
              </Card>
            </Col>
          </Row>
        </Card>
      </div>
    );
  };

  return (
    <div className={`admin-layout ${sidebarVisible ? "" : "sidebar-closed"}`}>
      {sidebarVisible && <Sidebar />}

      <div className="content-area">
        <Header title="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏ß‡∏£‡∏ñ‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å" toggleSidebar={toggleSidebar} />

        <div className="truckQueus-container">
          <div className="content-wrapper">
            {selectedQueue ? (
              renderQueueDetail()
            ) : (
              <Card className="truck-queue-card">
                <div className="card-header">
                  <Title level={4}>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏ß‡∏£‡∏ñ‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å</Title>
                  <div className="card-actions">
                    <Input
                      placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤..."
                      prefix={<SearchOutlined />}
                      onChange={(e) => setSearchText(e.target.value)}
                      style={{ width: 250, marginRight: 16 }}
                    />
                    <Button
                      type="primary"
                      icon={<PlusOutlined />}
                      className="add-button"
                    >
                      ‡πÄ‡∏û‡∏¥‡πà‡∏°
                    </Button>
                  </div>
                </div>

                <Table
                  columns={columns}
                  dataSource={truckQueues}
                  pagination={false}
                  className="truck-queue-table"
                />

                <div className="pagination-container">
                  <Pagination
                    current={currentPage}
                    onChange={handlePageChange}
                    total={10} // Adjust based on your data
                    showSizeChanger={false}
                    itemRender={(page, type) => {
                      if (type === "prev") {
                        return <Button size="small">&lt;</Button>;
                      }
                      if (type === "next") {
                        return <Button size="small">&gt;</Button>;
                      }
                      if (type === "page") {
                        return <Button size="small">{page}</Button>;
                      }
                      return null;
                    }}
                  />
                </div>
              </Card>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

TruckQueus.propTypes = {
  sidebarVisible: PropTypes.bool.isRequired,
  toggleSidebar: PropTypes.func.isRequired,
};

export default TruckQueus;
